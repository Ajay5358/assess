from flask import Flask, request, jsonify, render_template
from database import init_db, get_all_cves, get_cve_by_id, get_cves_by_year, get_cves_by_score, get_cves_modified_in_days
import os

app = Flask(__name__)
app.config['DATABASE'] = 'cve_database.db'

# Initialize database
init_db(app.config['DATABASE'])

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/cves/list')
def cves_list():
    return render_template('index.html')

@app.route('/cves/<cve_id>')
def cve_detail(cve_id):
    return render_template('cve_detail.html', cve_id=cve_id)

# API Endpoints
@app.route('/api/cves', methods=['GET'])
def api_get_cves():
    try:
        # Pagination parameters
        page = int(request.args.get('page', 1))
        per_page = int(request.args.get('per_page', 10))
        offset = (page - 1) * per_page
        
        # Filter parameters
        year = request.args.get('year')
        min_score = request.args.get('min_score')
        max_score = request.args.get('max_score')
        last_modified_days = request.args.get('last_modified_days')
        sort_by = request.args.get('sort_by', 'last_modified')
        sort_order = request.args.get('sort_order', 'desc')
        
        # Get CVE data
        cves, total_count = get_all_cves(
            limit=per_page, 
            offset=offset,
            year=year,
            min_score=min_score,
            max_score=max_score,
            last_modified_days=last_modified_days,
            sort_by=sort_by,
            sort_order=sort_order
        )
        
        return jsonify({
            'cves': cves,
            'total_count': total_count,
            'page': page,
            'per_page': per_page
        })
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/cves/<cve_id>', methods=['GET'])
def api_get_cve(cve_id):
    try:
        cve = get_cve_by_id(cve_id)
        if cve:
            return jsonify(cve)
        else:
            return jsonify({'error': 'CVE not found'}), 404
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/cves/year/<year>', methods=['GET'])
def api_get_cves_by_year(year):
    try:
        cves = get_cves_by_year(year)
        return jsonify({'cves': cves, 'count': len(cves)})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/cves/score', methods=['GET'])
def api_get_cves_by_score():
    try:
        min_score = request.args.get('min_score', 0)
        max_score = request.args.get('max_score', 10)
        cves = get_cves_by_score(min_score, max_score)
        return jsonify({'cves': cves, 'count': len(cves)})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/cves/modified/<int:days>', methods=['GET'])
def api_get_cves_modified_in_days(days):
    try:
        cves = get_cves_modified_in_days(days)
        return jsonify({'cves': cves, 'count': len(cves)})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)